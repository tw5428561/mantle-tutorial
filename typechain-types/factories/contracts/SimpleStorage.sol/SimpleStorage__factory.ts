/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleStorage,
  SimpleStorageInterface,
} from "../../../contracts/SimpleStorage.sol/SimpleStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newValue",
        type: "bytes32",
      },
    ],
    name: "dumbSetValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "msgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newValue",
        type: "bytes32",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newValue",
        type: "bytes32",
      },
    ],
    name: "setValueNotXDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "txOrigin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "xDomainSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061061b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063674df7121161005b578063674df712146101015780639faa1de31461011f578063d737d0c71461013b578063f96757d11461015957610088565b80631034f4bf1461008d57806334eafb11146100a95780633fa4f245146100c757806358825b10146100e5575b600080fd5b6100a760048036038101906100a2919061042d565b610177565b005b6100b1610181565b6040516100be9190610473565b60405180910390f35b6100cf610187565b6040516100dc919061049d565b60405180910390f35b6100ff60048036038101906100fa919061042d565b61018d565b005b6101096102df565b60405161011691906104f9565b60405180910390f35b6101396004803603810190610134919061042d565b610305565b005b6101436103a8565b60405161015091906104f9565b60405180910390f35b6101616103cc565b60405161016e91906104f9565b60405180910390f35b8060038190555050565b60045481565b60035481565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555032600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027d9190610540565b600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550600460008154809291906102d79061059c565b919050555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555032600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550600460008154809291906103a09061059c565b919050555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b6000819050919050565b61040a816103f7565b811461041557600080fd5b50565b60008135905061042781610401565b92915050565b600060208284031215610443576104426103f2565b5b600061045184828501610418565b91505092915050565b6000819050919050565b61046d8161045a565b82525050565b60006020820190506104886000830184610464565b92915050565b610497816103f7565b82525050565b60006020820190506104b2600083018461048e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e3826104b8565b9050919050565b6104f3816104d8565b82525050565b600060208201905061050e60008301846104ea565b92915050565b61051d816104d8565b811461052857600080fd5b50565b60008151905061053a81610514565b92915050565b600060208284031215610556576105556103f2565b5b60006105648482850161052b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105a78261045a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105da576105d961056d565b5b60018201905091905056fea26469706673582212208ffb8e05cfbde4283aa870233696a0e983d72525ca04d42a98a7f4d5994bfcd464736f6c634300080b0033";

type SimpleStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleStorage__factory extends ContractFactory {
  constructor(...args: SimpleStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleStorage> {
    return super.deploy(overrides || {}) as Promise<SimpleStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleStorage {
    return super.attach(address) as SimpleStorage;
  }
  override connect(signer: Signer): SimpleStorage__factory {
    return super.connect(signer) as SimpleStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleStorageInterface {
    return new utils.Interface(_abi) as SimpleStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleStorage {
    return new Contract(address, _abi, signerOrProvider) as SimpleStorage;
  }
}
