/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FromL1_ControlL2Greeter,
  FromL1_ControlL2GreeterInterface,
} from "../../../contracts/op-cross-messages/FromL1_ControlL2Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_crossDomainMessengerAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_greeterL2Addr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "crossDomainMessengerAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greeterL2Addr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161068c38038061068c8339818101604052810190610032919061011d565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b60008060408385031215610134576101336100ba565b5b600061014285828601610108565b925050602061015385828601610108565b9150509250929050565b6105208061016c6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806387edb8a214610046578063931d7f3e14610064578063a413686214610082575b600080fd5b61004e61009e565b60405161005b9190610276565b60405180910390f35b61006c6100c2565b6040516100799190610276565b60405180910390f35b61009c60048036038101906100979190610300565b6100e8565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606082826040516024016100fd9291906103ab565b6040516020818303038152906040527fa4136862000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633dbb202b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683620f42406040518463ffffffff1660e01b81526004016101fe939291906104ac565b600060405180830381600087803b15801561021857600080fd5b505af115801561022c573d6000803e3d6000fd5b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061026082610235565b9050919050565b61027081610255565b82525050565b600060208201905061028b6000830184610267565b92915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126102c0576102bf61029b565b5b8235905067ffffffffffffffff8111156102dd576102dc6102a0565b5b6020830191508360018202830111156102f9576102f86102a5565b5b9250929050565b6000806020838503121561031757610316610291565b5b600083013567ffffffffffffffff81111561033557610334610296565b5b610341858286016102aa565b92509250509250929050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061038a838561034d565b935061039783858461035e565b6103a08361036d565b840190509392505050565b600060208201905081810360008301526103c681848661037e565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104095780820151818401526020810190506103ee565b83811115610418576000848401525b50505050565b6000610429826103cf565b61043381856103da565b93506104438185602086016103eb565b61044c8161036d565b840191505092915050565b6000819050919050565b600063ffffffff82169050919050565b6000819050919050565b600061049661049161048c84610457565b610471565b610461565b9050919050565b6104a68161047b565b82525050565b60006060820190506104c16000830186610267565b81810360208301526104d3818561041e565b90506104e2604083018461049d565b94935050505056fea2646970667358221220d0b275c3af10729c6a672fffdd4a6c9a3e3ae643a4be3bd6ccf36bf30bbef97c64736f6c634300080b0033";

type FromL1_ControlL2GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FromL1_ControlL2GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FromL1_ControlL2Greeter__factory extends ContractFactory {
  constructor(...args: FromL1_ControlL2GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _crossDomainMessengerAddr: PromiseOrValue<string>,
    _greeterL2Addr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FromL1_ControlL2Greeter> {
    return super.deploy(
      _crossDomainMessengerAddr,
      _greeterL2Addr,
      overrides || {}
    ) as Promise<FromL1_ControlL2Greeter>;
  }
  override getDeployTransaction(
    _crossDomainMessengerAddr: PromiseOrValue<string>,
    _greeterL2Addr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _crossDomainMessengerAddr,
      _greeterL2Addr,
      overrides || {}
    );
  }
  override attach(address: string): FromL1_ControlL2Greeter {
    return super.attach(address) as FromL1_ControlL2Greeter;
  }
  override connect(signer: Signer): FromL1_ControlL2Greeter__factory {
    return super.connect(signer) as FromL1_ControlL2Greeter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FromL1_ControlL2GreeterInterface {
    return new utils.Interface(_abi) as FromL1_ControlL2GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FromL1_ControlL2Greeter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FromL1_ControlL2Greeter;
  }
}
