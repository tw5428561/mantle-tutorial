/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  L2CustomERC20,
  L2CustomERC20Interface,
} from "../../../contracts/op-erc20/L2CustomERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Bridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2Bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fb238038062001fb2833981810160405281019062000037919062000283565b81816040518060400160405280600d81526020017f4c32437573746f6d4552433230000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c3254000000000000000000000000000000000000000000000000000000000081525081818160039080519060200190620000bf92919062000169565b508060049080519060200190620000d892919062000169565b50505082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050506200032f565b8280546200017790620002f9565b90600052602060002090601f0160209004810192826200019b5760008555620001e7565b82601f10620001b657805160ff1916838001178555620001e7565b82800160010185558215620001e7579182015b82811115620001e6578251825591602001919060010190620001c9565b5b509050620001f69190620001fa565b5090565b5b8082111562000215576000816000905550600101620001fb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200024b826200021e565b9050919050565b6200025d816200023e565b81146200026957600080fd5b50565b6000815190506200027d8162000252565b92915050565b600080604083850312156200029d576200029c62000219565b5b6000620002ad858286016200026c565b9250506020620002c0858286016200026c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031257607f821691505b60208210811415620003295762000328620002ca565b5b50919050565b611c73806200033f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb146102d5578063ae1f6aaf14610305578063c01e1bd614610323578063dd62ed3e1461034157610100565b806370a082311461023b57806395d89b411461026b5780639dc29fac14610289578063a457c2d7146102a557610100565b806323b872dd116100d357806323b872dd146101a1578063313ce567146101d157806339509351146101ef57806340c10f191461021f57610100565b806301ffc9a71461010557806306fdde0314610135578063095ea7b31461015357806318160ddd14610183575b600080fd5b61011f600480360381019061011a9190611212565b610371565b60405161012c919061125a565b60405180910390f35b61013d610447565b60405161014a919061130e565b60405180910390f35b61016d600480360381019061016891906113c4565b6104d9565b60405161017a919061125a565b60405180910390f35b61018b6104fc565b6040516101989190611413565b60405180910390f35b6101bb60048036038101906101b6919061142e565b610506565b6040516101c8919061125a565b60405180910390f35b6101d9610535565b6040516101e6919061149d565b60405180910390f35b610209600480360381019061020491906113c4565b61053e565b604051610216919061125a565b60405180910390f35b610239600480360381019061023491906113c4565b610575565b005b610255600480360381019061025091906114b8565b610661565b6040516102629190611413565b60405180910390f35b6102736106a9565b604051610280919061130e565b60405180910390f35b6102a3600480360381019061029e91906113c4565b61073b565b005b6102bf60048036038101906102ba91906113c4565b610827565b6040516102cc919061125a565b60405180910390f35b6102ef60048036038101906102ea91906113c4565b61089e565b6040516102fc919061125a565b60405180910390f35b61030d6108c1565b60405161031a91906114f4565b60405180910390f35b61032b6108e7565b60405161033891906114f4565b60405180910390f35b61035b6004803603810190610356919061150f565b61090d565b6040516103689190611413565b60405180910390f35b6000807f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e290506000639dc29fac60e01b6340c10f1960e01b63c01e1bd660e01b18189050817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043e5750807bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b92505050919050565b6060600380546104569061157e565b80601f01602080910402602001604051908101604052809291908181526020018280546104829061157e565b80156104cf5780601f106104a4576101008083540402835291602001916104cf565b820191906000526020600020905b8154815290600101906020018083116104b257829003601f168201915b5050505050905090565b6000806104e4610994565b90506104f181858561099c565b600191505092915050565b6000600254905090565b600080610511610994565b905061051e858285610b67565b610529858585610bf3565b60019150509392505050565b60006008905090565b600080610549610994565b905061056a81858561055b858961090d565b61056591906115df565b61099c565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc90611681565b60405180910390fd5b61060f8282610e74565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885826040516106559190611413565b60405180910390a25050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546106b89061157e565b80601f01602080910402602001604051908101604052809291908181526020018280546106e49061157e565b80156107315780601f1061070657610100808354040283529160200191610731565b820191906000526020600020905b81548152906001019060200180831161071457829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c290611681565b60405180910390fd5b6107d58282610fd4565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161081b9190611413565b60405180910390a25050565b600080610832610994565b90506000610840828661090d565b905083811015610885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087c90611713565b60405180910390fd5b610892828686840361099c565b60019250505092915050565b6000806108a9610994565b90506108b6818585610bf3565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a03906117a5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7390611837565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b5a9190611413565b60405180910390a3505050565b6000610b73848461090d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610bed5781811015610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd6906118a3565b60405180910390fd5b610bec848484840361099c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5a90611935565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cca906119c7565b60405180910390fd5b610cde8383836111ab565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5b90611a59565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610df791906115df565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e5b9190611413565b60405180910390a3610e6e8484846111b0565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ee4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edb90611ac5565b60405180910390fd5b610ef0600083836111ab565b8060026000828254610f0291906115df565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f5791906115df565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fbc9190611413565b60405180910390a3610fd0600083836111b0565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611044576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103b90611b57565b60405180910390fd5b611050826000836111ab565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cd90611be9565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461112d9190611c09565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111929190611413565b60405180910390a36111a6836000846111b0565b505050565b505050565b505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6111ef816111ba565b81146111fa57600080fd5b50565b60008135905061120c816111e6565b92915050565b600060208284031215611228576112276111b5565b5b6000611236848285016111fd565b91505092915050565b60008115159050919050565b6112548161123f565b82525050565b600060208201905061126f600083018461124b565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112af578082015181840152602081019050611294565b838111156112be576000848401525b50505050565b6000601f19601f8301169050919050565b60006112e082611275565b6112ea8185611280565b93506112fa818560208601611291565b611303816112c4565b840191505092915050565b6000602082019050818103600083015261132881846112d5565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061135b82611330565b9050919050565b61136b81611350565b811461137657600080fd5b50565b60008135905061138881611362565b92915050565b6000819050919050565b6113a18161138e565b81146113ac57600080fd5b50565b6000813590506113be81611398565b92915050565b600080604083850312156113db576113da6111b5565b5b60006113e985828601611379565b92505060206113fa858286016113af565b9150509250929050565b61140d8161138e565b82525050565b60006020820190506114286000830184611404565b92915050565b600080600060608486031215611447576114466111b5565b5b600061145586828701611379565b935050602061146686828701611379565b9250506040611477868287016113af565b9150509250925092565b600060ff82169050919050565b61149781611481565b82525050565b60006020820190506114b2600083018461148e565b92915050565b6000602082840312156114ce576114cd6111b5565b5b60006114dc84828501611379565b91505092915050565b6114ee81611350565b82525050565b600060208201905061150960008301846114e5565b92915050565b60008060408385031215611526576115256111b5565b5b600061153485828601611379565b925050602061154585828601611379565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061159657607f821691505b602082108114156115aa576115a961154f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115ea8261138e565b91506115f58361138e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561162a576116296115b0565b5b828201905092915050565b7f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e600082015250565b600061166b602083611280565b915061167682611635565b602082019050919050565b6000602082019050818103600083015261169a8161165e565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006116fd602583611280565b9150611708826116a1565b604082019050919050565b6000602082019050818103600083015261172c816116f0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061178f602483611280565b915061179a82611733565b604082019050919050565b600060208201905081810360008301526117be81611782565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611821602283611280565b915061182c826117c5565b604082019050919050565b6000602082019050818103600083015261185081611814565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061188d601d83611280565b915061189882611857565b602082019050919050565b600060208201905081810360008301526118bc81611880565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061191f602583611280565b915061192a826118c3565b604082019050919050565b6000602082019050818103600083015261194e81611912565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006119b1602383611280565b91506119bc82611955565b604082019050919050565b600060208201905081810360008301526119e0816119a4565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611a43602683611280565b9150611a4e826119e7565b604082019050919050565b60006020820190508181036000830152611a7281611a36565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611aaf601f83611280565b9150611aba82611a79565b602082019050919050565b60006020820190508181036000830152611ade81611aa2565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b41602183611280565b9150611b4c82611ae5565b604082019050919050565b60006020820190508181036000830152611b7081611b34565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bd3602283611280565b9150611bde82611b77565b604082019050919050565b60006020820190508181036000830152611c0281611bc6565b9050919050565b6000611c148261138e565b9150611c1f8361138e565b925082821015611c3257611c316115b0565b5b82820390509291505056fea264697066735822122046dcacc25b041c077bd82d6eddc5a8e55060a5e2bf3092504d9e295c0896e68764736f6c634300080b0033";

type L2CustomERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2CustomERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2CustomERC20__factory extends ContractFactory {
  constructor(...args: L2CustomERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _l2Bridge: PromiseOrValue<string>,
    _l1Token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L2CustomERC20> {
    return super.deploy(
      _l2Bridge,
      _l1Token,
      overrides || {}
    ) as Promise<L2CustomERC20>;
  }
  override getDeployTransaction(
    _l2Bridge: PromiseOrValue<string>,
    _l1Token: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_l2Bridge, _l1Token, overrides || {});
  }
  override attach(address: string): L2CustomERC20 {
    return super.attach(address) as L2CustomERC20;
  }
  override connect(signer: Signer): L2CustomERC20__factory {
    return super.connect(signer) as L2CustomERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2CustomERC20Interface {
    return new utils.Interface(_abi) as L2CustomERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2CustomERC20 {
    return new Contract(address, _abi, signerOrProvider) as L2CustomERC20;
  }
}
